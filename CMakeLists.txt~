cmake_minimum_required(VERSION 2.8.4)
project(Synergy)

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")

set(EXECUTABLE_OUTPUT_PATH "${PROJECT_SOURCE_DIR}/bin/Linux")
#set(LIBRARY_OUTPUT_PATH "${PROJECT_SOURCE_DIR}/lib/Linux")

set(LIBRARIES X11 Xxf86vm Xrandr pthread Xi m Xext GL GLEW) #may need GLEW

# finds all files with a given extension
macro (append_files files ext)
	  foreach (dir ${ARGN})
		      file (GLOB _files "${dir}/*.${ext}")
		          list (APPEND ${files} ${_files})
			    endforeach (dir)
		    endmacro (append_files)


set (SOURCE_FILES
source/Synergy/Core/ObjFileLoader.cpp  
source/Synergy/Core/Resources.cpp  
source/Synergy/Graphics/Camera.cpp  
source/Synergy/Graphics/Frustum.cpp  
source/Synergy/Graphics/GlErrorCheck.cpp  
source/Synergy/Graphics/PostProcessor.cpp  
source/Synergy/Graphics/RenderTarget.cpp  
source/Synergy/Graphics/Texture.inl
source/Synergy/Graphics/ShaderProgram.cpp    
)

set (HEADER_FILES
source/Synergy/Core/Exception.hpp  
source/Synergy/Core/Math.hpp 
source/Synergy/Core/ObjFileLoader.hpp  
source/Synergy/Core/Resources.hpp  
source/Synergy/Core/Settings.hpp
source/Synergy/Graphics/Camera.hpp  
source/Synergy/Graphics/Frustum.hpp 
source/Synergy/Graphics/GlErrorCheck.hpp  
source/Synergy/Graphics/PostProcessor.hpp  
source/Synergy/Graphics/RenderTarget.hpp  
source/Synergy/Graphics/ShaderProgram.hpp 
source/Synergy/Graphics/ShaderException.hpp 
source/Synergy/Graphics/Texture.hpp
)

include_directories(source)

add_library(Synergy STATIC ${SOURCE_FILES})


#target_link_libraries(Synergy ${GLFW_LIBRARIES})
#target_link_libraries(Synergy ${GLFW_STATIC_LIBRARIES})

#GlfwExample ===========================================
add_executable(GlfwExample examples/GlfwExample.cpp)
target_link_libraries(GlfwExample "${PROJECT_SOURCE_DIR}/lib/Linux/libglfw3.a")
target_link_libraries(GlfwExample ${LIBRARIES})
#target_link_libraries(GlfwExample LINK_PUBLIC Synergy)

